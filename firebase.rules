rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function hasValidMembership(requiredLevels) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return userDoc.data.membershipType in requiredLevels;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow create: if isAdmin();
      allow update: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();

      // User preferences subcollection
      match /preferences/{prefId} {
        allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
        allow write: if isAuthenticated() && (isOwner(userId) || isAdmin());
      }
    }

    // Affirmations collection
    match /affirmations/{affirmationId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Affirmation categories collection
    match /affirmationCategories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Challenges collection
    match /challenges/{challengeId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Challenge progress collection
    match /challengeProgress/{progressId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
      allow delete: if isAdmin();
    }

    // Books collection
    match /books/{bookId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Metadata collection (for system settings)
    match /metadata/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User purchases collection
    match /purchases/{purchaseId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}